From smccloud at geo-comm.com  Wed Aug  8 14:32:09 2012
From: smccloud at geo-comm.com (Shaun McCloud)
Date: Wed, 8 Aug 2012 21:32:09 +0000
Subject: [Slony1-general] Compiling Slony-I 2.1.1 against PostgreSQL 8.4 on
	a64 Windows
Message-ID: <7742DD496427B743BC8B7BBF6D380BA03BEFF0A9@EXCHANGE10.geo-comm.local>

Hello,

I have successfully compiled Slony-I 2.1.1 against PostgreSQL 8.4 on x86 Windows and against PostgreSQL 9.0 x64 on x64 Windows but I am unable to compile it against PostgreSQL 8.4 on x64 Windows.

I'm following the directions at http://slony.info/documentation/2.1/administration.html#BUILDINGWIN32 and use the following commands to set my environment variables.
set PG_INC=c:\Postgresql\8.4\include
set PG_LIB=c:\Postgresql\8.4\lib
set PGSHARE=c:\\Postgresql\\8.4\\share
set PTHREADS_INC=C:\Slony\pthreads\include
set PTHREADS_LIB=C:\Slony\pthreads\lib\x86
set GETTEXT_LIB=C:\Slony\gettext\lib

I have also tried set PTHREADS_LIB=C:\Slony\pthreads\lib\x64 instead of set PTHREADS_LIB=C:\Slony\pthreads\lib\x86 but it doesn't matter.

I end up getting the following errors trying to build slony1_funcs.dll and haven't been able to compile slon or slonik either.

slony1_funcs.obj : error LNK2019: unresolved external symbol Int64GetDatum referenced in function _Slony_I_createEvent
slony1_funcs.obj : error LNK2019: unresolved external symbol SPI_finish referenced in function _Slony_I_createEvent
slony1_funcs.obj : error LNK2019: unresolved external symbol DirectFunctionCall1 referenced in function _Slony_I_createEvent
slony1_funcs.obj : error LNK2019: unresolved external symbol textout referenced in function _Slony_I_createEvent
slony1_funcs.obj : error LNK2019: unresolved external symbol SPI_getbinval referenced in function _Slony_I_createEvent
slony1_funcs.obj : error LNK2019: unresolved external symbol __imp_SPI_tuptable referenced in function _Slony_I_createEvent
slony1_funcs.obj : error LNK2019: unresolved external symbol __imp_SPI_processed referenced in function _Slony_I_createEvent
slony1_funcs.obj : error LNK2019: unresolved external symbol SPI_execp referenced in function _Slony_I_createEvent
slony1_funcs.obj : error LNK2019: unresolved external symbol SPI_connect referenced in function _Slony_I_createEvent
slony1_funcs.obj : error LNK2019: unresolved external symbol elog_finish referenced in function _Slony_I_createEvent
slony1_funcs.obj : error LNK2019: unresolved external symbol elog_start referenced in function _Slony_I_createEvent
slony1_funcs.obj : error LNK2019: unresolved external symbol GetActiveSnapshot referenced in function _Slony_I_createEvent
slony1_funcs.obj : error LNK2019: unresolved external symbol GetTopTransactionId referenced in function _Slony_I_createEvent
slony1_funcs.obj : error LNK2019: unresolved external symbol MemoryContextAlloc referenced in function _Slony_I_getModuleVersion
slony1_funcs.obj : error LNK2019: unresolved external symbol __imp_CurrentMemoryContext referenced in function _Slony_I_getModuleVersion
slony1_funcs.obj : error LNK2019: unresolved external symbol FunctionCall2 referenced in function _Slony_I_logTrigger
slony1_funcs.obj : error LNK2019: unresolved external symbol lookup_type_cache referenced in function _Slony_I_logTrigger
slony1_funcs.obj : error LNK2019: unresolved external symbol SPI_gettypeid referenced in function _Slony_I_logTrigger
slony1_funcs.obj : error LNK2019: unresolved external symbol SPI_getvalue referenced in function _Slony_I_logTrigger
slony1_funcs.obj : error LNK2019: unresolved external symbol set_config_option referenced in function _Slony_I_logTrigger
slony1_funcs.obj : error LNK2019: unresolved external symbol GetConfigOptionByName referenced in function _Slony_I_logTrigger
slony1_funcs.obj : error LNK2019: unresolved external symbol SPI_fname referenced in function _Slony_I_logTrigger
slony1_funcs.obj : error LNK2019: unresolved external symbol SPI_freetuptable referenced in function _Slony_I_logTrigger
slony1_funcs.obj : error LNK2019: unresolved external symbol namein referenced in function _Slony_I_logTrigger
slony1_funcs.obj : error LNK2019: unresolved external symbol __imp_SessionReplicationRole referenced in function _Slony_I_logTrigger
slony1_funcs.obj : error LNK2019: unresolved external symbol pgkill referenced in function _Slony_I_killBackend
slony1_funcs.obj : error LNK2019: unresolved external symbol pg_detoast_datum referenced in function _Slony_I_killBackend
slony1_funcs.obj : error LNK2019: unresolved external symbol superuser referenced in function _Slony_I_killBackend
slony1_funcs.obj : error LNK2019: unresolved external symbol pg_mblen referenced in function slon_quote_literal
slony1_funcs.obj : error LNK2019: unresolved external symbol SPI_saveplan referenced in function getClusterStatus
slony1_funcs.obj : error LNK2019: unresolved external symbol SPI_prepare referenced in function getClusterStatus
slony1_funcs.obj : error LNK2019: unresolved external symbol pg_sprintf referenced in function getClusterStatus
slony1_funcs.obj : error LNK2019: unresolved external symbol lappend referenced in function getClusterStatus
slony1_funcs.obj : error LNK2019: unresolved external symbol makeString referenced in function getClusterStatus
slony1_funcs.obj : error LNK2019: unresolved external symbol __imp_newNodeMacroHolder referenced in function getClusterStatus
slony1_funcs.obj : error LNK2019: unresolved external symbol MemoryContextAllocZeroAligned referenced in function getClusterStatus
slony1_funcs.obj : error LNK2019: unresolved external symbol SPI_exec referenced in function getClusterStatus
slony1_funcs.obj : error LNK2019: unresolved external symbol pg_snprintf referenced in function getClusterStatus
slony1_funcs.obj : error LNK2019: unresolved external symbol quote_ident referenced in function getClusterStatus
slony1_funcs.obj : error LNK2019: unresolved external symbol textin referenced in function getClusterStatus
slony1_funcs.obj : error LNK2019: unresolved external symbol DirectFunctionCall2 referenced in function getClusterStatus
slony1_funcs.obj : error LNK2019: unresolved external symbol nameeq referenced in function getClusterStatus
slony1_funcs.obj : error LNK2019: unresolved external symbol SPI_freeplan referenced in function _Slony_I_resetSession
slony1_funcs.obj : error LNK2019: unresolved external symbol array_set referenced in function _slon_decode_tgargs
slony1_funcs.obj : error LNK2019: unresolved external symbol construct_empty_array referenced in function _slon_decode_tgargs
slony1_funcs.dll : fatal error LNK1120: 45 unresolved externals
NMAKE : fatal error U1077: '"C:\Program Files (x86)\Microsoft Visual Studio 9.0\VC\Bin\amd64\link.exe"' : return code '0x460'
Stop.

Do I need to force it to use the x86_64  linker instead of the amd64 one?

I already tried to copy the build I made on the x86 machine over and it won't work.

Shaun McCloud, MCDST | Associate Software Developer
Geo-Comm Inc. | www.geo-comm.com
601 W. Saint Germain St., St. Cloud, MN, 56301
Office: 320.240.0040 or 888.436.2666 Fax: 320.240.2389

From ssinger at ca.afilias.info  Wed Aug  8 18:47:03 2012
From: ssinger at ca.afilias.info (Steve Singer)
Date: Wed, 08 Aug 2012 21:47:03 -0400
Subject: [Slony1-general] Compiling Slony-I 2.1.1 against PostgreSQL 8.4
 on a64 Windows
In-Reply-To: <7742DD496427B743BC8B7BBF6D380BA03BEFF0A9@EXCHANGE10.geo-comm.local>
References: <7742DD496427B743BC8B7BBF6D380BA03BEFF0A9@EXCHANGE10.geo-comm.local>
Message-ID: <50231697.8030800@ca.afilias.info>

On 12-08-08 05:32 PM, Shaun McCloud wrote:
> Hello,
>
> I have successfully compiled Slony-I 2.1.1 against PostgreSQL 8.4 on x86 Windows and against PostgreSQL 9.0 x64 on x64 Windows but I am unable to compile it against PostgreSQL 8.4 on x64 Windows.

The only one-click installer for 8.4 (Windows) I see on the EDB website 
is for a x86 (32bit) version of Postgresql.   This should install okay 
on a x64 version of Windows.  I assume this is what you did.

If so you need to make sure that your compiling a 32 bit version of 
slony (since your linking against a 32 bit version of postgresql).

When I install the Win32 SDK on a x64 version of windows,  under the 
"Microsoft Platform SDK for Windows 2003" menu it gives me options for 
both "Windows Server 2003 32 bit build environment" and  "Windows Server 
2003 64-bit Build environment"

make sure you select the 32 bit build environment.  I suspect this is 
your issue.  If not let us know and I'll look further at it.


>
> I'm following the directions at http://slony.info/documentation/2.1/administration.html#BUILDINGWIN32 and use the following commands to set my environment variables.
> set PG_INC=c:\Postgresql\8.4\include
> set PG_LIB=c:\Postgresql\8.4\lib
> set PGSHARE=c:\\Postgresql\\8.4\\share
> set PTHREADS_INC=C:\Slony\pthreads\include
> set PTHREADS_LIB=C:\Slony\pthreads\lib\x86
> set GETTEXT_LIB=C:\Slony\gettext\lib
>
> I have also tried set PTHREADS_LIB=C:\Slony\pthreads\lib\x64 instead of set PTHREADS_LIB=C:\Slony\pthreads\lib\x86 but it doesn't matter.
>
> I end up getting the following errors trying to build slony1_funcs.dll and haven't been able to compile slon or slonik either.
>
> slony1_funcs.obj : error LNK2019: unresolved external symbol Int64GetDatum referenced in function _Slony_I_createEvent
> slony1_funcs.obj : error LNK2019: unresolved external symbol SPI_finish referenced in function _Slony_I_createEvent
> slony1_funcs.obj : error LNK2019: unresolved external symbol DirectFunctionCall1 referenced in function _Slony_I_createEvent
> slony1_funcs.obj : error LNK2019: unresolved external symbol textout referenced in function _Slony_I_createEvent
> slony1_funcs.obj : error LNK2019: unresolved external symbol SPI_getbinval referenced in function _Slony_I_createEvent
> slony1_funcs.obj : error LNK2019: unresolved external symbol __imp_SPI_tuptable referenced in function _Slony_I_createEvent
> slony1_funcs.obj : error LNK2019: unresolved external symbol __imp_SPI_processed referenced in function _Slony_I_createEvent
> slony1_funcs.obj : error LNK2019: unresolved external symbol SPI_execp referenced in function _Slony_I_createEvent
> slony1_funcs.obj : error LNK2019: unresolved external symbol SPI_connect referenced in function _Slony_I_createEvent
> slony1_funcs.obj : error LNK2019: unresolved external symbol elog_finish referenced in function _Slony_I_createEvent
> slony1_funcs.obj : error LNK2019: unresolved external symbol elog_start referenced in function _Slony_I_createEvent
> slony1_funcs.obj : error LNK2019: unresolved external symbol GetActiveSnapshot referenced in function _Slony_I_createEvent
> slony1_funcs.obj : error LNK2019: unresolved external symbol GetTopTransactionId referenced in function _Slony_I_createEvent
> slony1_funcs.obj : error LNK2019: unresolved external symbol MemoryContextAlloc referenced in function _Slony_I_getModuleVersion
> slony1_funcs.obj : error LNK2019: unresolved external symbol __imp_CurrentMemoryContext referenced in function _Slony_I_getModuleVersion
> slony1_funcs.obj : error LNK2019: unresolved external symbol FunctionCall2 referenced in function _Slony_I_logTrigger
> slony1_funcs.obj : error LNK2019: unresolved external symbol lookup_type_cache referenced in function _Slony_I_logTrigger
> slony1_funcs.obj : error LNK2019: unresolved external symbol SPI_gettypeid referenced in function _Slony_I_logTrigger
> slony1_funcs.obj : error LNK2019: unresolved external symbol SPI_getvalue referenced in function _Slony_I_logTrigger
> slony1_funcs.obj : error LNK2019: unresolved external symbol set_config_option referenced in function _Slony_I_logTrigger
> slony1_funcs.obj : error LNK2019: unresolved external symbol GetConfigOptionByName referenced in function _Slony_I_logTrigger
> slony1_funcs.obj : error LNK2019: unresolved external symbol SPI_fname referenced in function _Slony_I_logTrigger
> slony1_funcs.obj : error LNK2019: unresolved external symbol SPI_freetuptable referenced in function _Slony_I_logTrigger
> slony1_funcs.obj : error LNK2019: unresolved external symbol namein referenced in function _Slony_I_logTrigger
> slony1_funcs.obj : error LNK2019: unresolved external symbol __imp_SessionReplicationRole referenced in function _Slony_I_logTrigger
> slony1_funcs.obj : error LNK2019: unresolved external symbol pgkill referenced in function _Slony_I_killBackend
> slony1_funcs.obj : error LNK2019: unresolved external symbol pg_detoast_datum referenced in function _Slony_I_killBackend
> slony1_funcs.obj : error LNK2019: unresolved external symbol superuser referenced in function _Slony_I_killBackend
> slony1_funcs.obj : error LNK2019: unresolved external symbol pg_mblen referenced in function slon_quote_literal
> slony1_funcs.obj : error LNK2019: unresolved external symbol SPI_saveplan referenced in function getClusterStatus
> slony1_funcs.obj : error LNK2019: unresolved external symbol SPI_prepare referenced in function getClusterStatus
> slony1_funcs.obj : error LNK2019: unresolved external symbol pg_sprintf referenced in function getClusterStatus
> slony1_funcs.obj : error LNK2019: unresolved external symbol lappend referenced in function getClusterStatus
> slony1_funcs.obj : error LNK2019: unresolved external symbol makeString referenced in function getClusterStatus
> slony1_funcs.obj : error LNK2019: unresolved external symbol __imp_newNodeMacroHolder referenced in function getClusterStatus
> slony1_funcs.obj : error LNK2019: unresolved external symbol MemoryContextAllocZeroAligned referenced in function getClusterStatus
> slony1_funcs.obj : error LNK2019: unresolved external symbol SPI_exec referenced in function getClusterStatus
> slony1_funcs.obj : error LNK2019: unresolved external symbol pg_snprintf referenced in function getClusterStatus
> slony1_funcs.obj : error LNK2019: unresolved external symbol quote_ident referenced in function getClusterStatus
> slony1_funcs.obj : error LNK2019: unresolved external symbol textin referenced in function getClusterStatus
> slony1_funcs.obj : error LNK2019: unresolved external symbol DirectFunctionCall2 referenced in function getClusterStatus
> slony1_funcs.obj : error LNK2019: unresolved external symbol nameeq referenced in function getClusterStatus
> slony1_funcs.obj : error LNK2019: unresolved external symbol SPI_freeplan referenced in function _Slony_I_resetSession
> slony1_funcs.obj : error LNK2019: unresolved external symbol array_set referenced in function _slon_decode_tgargs
> slony1_funcs.obj : error LNK2019: unresolved external symbol construct_empty_array referenced in function _slon_decode_tgargs
> slony1_funcs.dll : fatal error LNK1120: 45 unresolved externals
> NMAKE : fatal error U1077: '"C:\Program Files (x86)\Microsoft Visual Studio 9.0\VC\Bin\amd64\link.exe"' : return code '0x460'
> Stop.
>
> Do I need to force it to use the x86_64  linker instead of the amd64 one?
>
> I already tried to copy the build I made on the x86 machine over and it won't work.
>
> Shaun McCloud, MCDST | Associate Software Developer
> Geo-Comm Inc. | www.geo-comm.com
> 601 W. Saint Germain St., St. Cloud, MN, 56301
> Office: 320.240.0040 or 888.436.2666 Fax: 320.240.2389
> _______________________________________________
> Slony1-general mailing list
> Slony1-general at lists.slony.info
> http://lists.slony.info/mailman/listinfo/slony1-general
>


From smccloud at geo-comm.com  Thu Aug  9 06:56:36 2012
From: smccloud at geo-comm.com (Shaun McCloud)
Date: Thu, 9 Aug 2012 13:56:36 +0000
Subject: [Slony1-general] Compiling Slony-I 2.1.1 against PostgreSQL 8.4
 on x64 Windows
Message-ID: <7742DD496427B743BC8B7BBF6D380BA03BF003F0@EXCHANGE10.geo-comm.local>

I ended up having to find a copy of Visual C++ 2008 Express to compile it, but I got it working.  I did also have to copy src\backend\slony1_funcs.dll to my PostgreSQL lib directory, so that might need to be added to the directions.  I believe the reason my first compile wouldn't work when copied over is because I installed PostgreSQL into a completely different directory and for some reason Slony doesn't see a Windows Symbolic Link (mklink in Vista & above) the same as it does in *NIX.

Shaun McCloud, MCDST | Associate Software Developer
Geo-Comm Inc. | www.geo-comm.com

-----Original Message-----
From: Steve Singer [mailto:ssinger at ca.afilias.info] 
Sent: Wednesday, August 08, 2012 20:47
To: Shaun McCloud
Cc: slony1-general at lists.slony.info
Subject: Re: [Slony1-general] Compiling Slony-I 2.1.1 against PostgreSQL 8.4 on a64 Windows

On 12-08-08 05:32 PM, Shaun McCloud wrote:
> Hello,
>
> I have successfully compiled Slony-I 2.1.1 against PostgreSQL 8.4 on x86 Windows and against PostgreSQL 9.0 x64 on x64 Windows but I am unable to compile it against PostgreSQL 8.4 on x64 Windows.

The only one-click installer for 8.4 (Windows) I see on the EDB website 
is for a x86 (32bit) version of Postgresql.   This should install okay 
on a x64 version of Windows.  I assume this is what you did.

If so you need to make sure that your compiling a 32 bit version of slony (since your linking against a 32 bit version of postgresql).

When I install the Win32 SDK on a x64 version of windows,  under the "Microsoft Platform SDK for Windows 2003" menu it gives me options for both "Windows Server 2003 32 bit build environment" and  "Windows Server
2003 64-bit Build environment"

make sure you select the 32 bit build environment.  I suspect this is your issue.  If not let us know and I'll look further at it.


>
> I'm following the directions at http://slony.info/documentation/2.1/administration.html#BUILDINGWIN32 and use the following commands to set my environment variables.
> set PG_INC=c:\Postgresql\8.4\include
> set PG_LIB=c:\Postgresql\8.4\lib
> set PGSHARE=c:\\Postgresql\\8.4\\share
> set PTHREADS_INC=C:\Slony\pthreads\include
> set PTHREADS_LIB=C:\Slony\pthreads\lib\x86
> set GETTEXT_LIB=C:\Slony\gettext\lib
>
> I have also tried set PTHREADS_LIB=C:\Slony\pthreads\lib\x64 instead of set PTHREADS_LIB=C:\Slony\pthreads\lib\x86 but it doesn't matter.
>
> I end up getting the following errors trying to build slony1_funcs.dll and haven't been able to compile slon or slonik either.
>
> slony1_funcs.obj : error LNK2019: unresolved external symbol Int64GetDatum referenced in function _Slony_I_createEvent
> slony1_funcs.obj : error LNK2019: unresolved external symbol SPI_finish referenced in function _Slony_I_createEvent
> slony1_funcs.obj : error LNK2019: unresolved external symbol DirectFunctionCall1 referenced in function _Slony_I_createEvent
> slony1_funcs.obj : error LNK2019: unresolved external symbol textout referenced in function _Slony_I_createEvent
> slony1_funcs.obj : error LNK2019: unresolved external symbol SPI_getbinval referenced in function _Slony_I_createEvent
> slony1_funcs.obj : error LNK2019: unresolved external symbol __imp_SPI_tuptable referenced in function _Slony_I_createEvent
> slony1_funcs.obj : error LNK2019: unresolved external symbol __imp_SPI_processed referenced in function _Slony_I_createEvent
> slony1_funcs.obj : error LNK2019: unresolved external symbol SPI_execp referenced in function _Slony_I_createEvent
> slony1_funcs.obj : error LNK2019: unresolved external symbol SPI_connect referenced in function _Slony_I_createEvent
> slony1_funcs.obj : error LNK2019: unresolved external symbol elog_finish referenced in function _Slony_I_createEvent
> slony1_funcs.obj : error LNK2019: unresolved external symbol elog_start referenced in function _Slony_I_createEvent
> slony1_funcs.obj : error LNK2019: unresolved external symbol GetActiveSnapshot referenced in function _Slony_I_createEvent
> slony1_funcs.obj : error LNK2019: unresolved external symbol GetTopTransactionId referenced in function _Slony_I_createEvent
> slony1_funcs.obj : error LNK2019: unresolved external symbol MemoryContextAlloc referenced in function _Slony_I_getModuleVersion
> slony1_funcs.obj : error LNK2019: unresolved external symbol __imp_CurrentMemoryContext referenced in function _Slony_I_getModuleVersion
> slony1_funcs.obj : error LNK2019: unresolved external symbol FunctionCall2 referenced in function _Slony_I_logTrigger
> slony1_funcs.obj : error LNK2019: unresolved external symbol lookup_type_cache referenced in function _Slony_I_logTrigger
> slony1_funcs.obj : error LNK2019: unresolved external symbol SPI_gettypeid referenced in function _Slony_I_logTrigger
> slony1_funcs.obj : error LNK2019: unresolved external symbol SPI_getvalue referenced in function _Slony_I_logTrigger
> slony1_funcs.obj : error LNK2019: unresolved external symbol set_config_option referenced in function _Slony_I_logTrigger
> slony1_funcs.obj : error LNK2019: unresolved external symbol GetConfigOptionByName referenced in function _Slony_I_logTrigger
> slony1_funcs.obj : error LNK2019: unresolved external symbol SPI_fname referenced in function _Slony_I_logTrigger
> slony1_funcs.obj : error LNK2019: unresolved external symbol SPI_freetuptable referenced in function _Slony_I_logTrigger
> slony1_funcs.obj : error LNK2019: unresolved external symbol namein referenced in function _Slony_I_logTrigger
> slony1_funcs.obj : error LNK2019: unresolved external symbol __imp_SessionReplicationRole referenced in function _Slony_I_logTrigger
> slony1_funcs.obj : error LNK2019: unresolved external symbol pgkill referenced in function _Slony_I_killBackend
> slony1_funcs.obj : error LNK2019: unresolved external symbol pg_detoast_datum referenced in function _Slony_I_killBackend
> slony1_funcs.obj : error LNK2019: unresolved external symbol superuser referenced in function _Slony_I_killBackend
> slony1_funcs.obj : error LNK2019: unresolved external symbol pg_mblen referenced in function slon_quote_literal
> slony1_funcs.obj : error LNK2019: unresolved external symbol SPI_saveplan referenced in function getClusterStatus
> slony1_funcs.obj : error LNK2019: unresolved external symbol SPI_prepare referenced in function getClusterStatus
> slony1_funcs.obj : error LNK2019: unresolved external symbol pg_sprintf referenced in function getClusterStatus
> slony1_funcs.obj : error LNK2019: unresolved external symbol lappend referenced in function getClusterStatus
> slony1_funcs.obj : error LNK2019: unresolved external symbol makeString referenced in function getClusterStatus
> slony1_funcs.obj : error LNK2019: unresolved external symbol __imp_newNodeMacroHolder referenced in function getClusterStatus
> slony1_funcs.obj : error LNK2019: unresolved external symbol MemoryContextAllocZeroAligned referenced in function getClusterStatus
> slony1_funcs.obj : error LNK2019: unresolved external symbol SPI_exec referenced in function getClusterStatus
> slony1_funcs.obj : error LNK2019: unresolved external symbol pg_snprintf referenced in function getClusterStatus
> slony1_funcs.obj : error LNK2019: unresolved external symbol quote_ident referenced in function getClusterStatus
> slony1_funcs.obj : error LNK2019: unresolved external symbol textin referenced in function getClusterStatus
> slony1_funcs.obj : error LNK2019: unresolved external symbol DirectFunctionCall2 referenced in function getClusterStatus
> slony1_funcs.obj : error LNK2019: unresolved external symbol nameeq referenced in function getClusterStatus
> slony1_funcs.obj : error LNK2019: unresolved external symbol SPI_freeplan referenced in function _Slony_I_resetSession
> slony1_funcs.obj : error LNK2019: unresolved external symbol array_set referenced in function _slon_decode_tgargs
> slony1_funcs.obj : error LNK2019: unresolved external symbol construct_empty_array referenced in function _slon_decode_tgargs
> slony1_funcs.dll : fatal error LNK1120: 45 unresolved externals
> NMAKE : fatal error U1077: '"C:\Program Files (x86)\Microsoft Visual Studio 9.0\VC\Bin\amd64\link.exe"' : return code '0x460'
> Stop.
>
> Do I need to force it to use the x86_64  linker instead of the amd64 one?
>
> I already tried to copy the build I made on the x86 machine over and it won't work.
>
> Shaun McCloud, MCDST | Associate Software Developer
> Geo-Comm Inc. | www.geo-comm.com
> 601 W. Saint Germain St., St. Cloud, MN, 56301
> Office: 320.240.0040 or 888.436.2666 Fax: 320.240.2389
> _______________________________________________
> Slony1-general mailing list
> Slony1-general at lists.slony.info
> http://lists.slony.info/mailman/listinfo/slony1-general
>


From brianf at consistentstate.com  Thu Aug 16 09:37:19 2012
From: brianf at consistentstate.com (Brian Fehrle)
Date: Thu, 16 Aug 2012 10:37:19 -0600
Subject: [Slony1-general] pg_dump backups without slony triggers?
Message-ID: <502D21BF.8010603@consistentstate.com>

Hi All,

I have a Slony slave that I wish to perform some pg_dumps as backups 
from to restore elsewhere for testing. But I don't want the slony schema 
or triggers to come in the dump.

my dump right now is like follows:

pg_dump dbname --schema=myschema1 --schema=myschema2

Since I'm specifying specifically two schemas, the slony schema is not 
included. However, the slony triggers on the tables within the schemas I 
do want to copy are part of the dump. So when I run a restore, it 
attempts to create those triggers. The triggers do fail because the 
slony schema and elements don't exist, but I don't like the idea of 
having a ton of failures in my restoration when restoring this database.

Is there any way in the dump to also exclude slony objects that exist 
out of the slony schema?

Thanks,

- Brian F

From davidtecher at yahoo.fr  Thu Aug 16 16:31:10 2012
From: davidtecher at yahoo.fr (David TECHER)
Date: Fri, 17 Aug 2012 00:31:10 +0100 (BST)
Subject: [Slony1-general] pg_dump backups without slony triggers?
In-Reply-To: <502D21BF.8010603@consistentstate.com>
References: <502D21BF.8010603@consistentstate.com>
Message-ID: <1345159870.54977.YahooMailNeo@web29802.mail.ird.yahoo.com>

You need to use a temporary table of content of your dump excluding these trigger using grep

Example

1) Generate backup.dump with the 


pg_dump -Fc -f backup.dump? --schema=myschema1 --schema=myschema2 -hlocalhost -p5432 .....

2) Use flag l to read the table of contents of your backup.dump?

Let? suppose that your Slony schema is named 'myslonycluster' then


pg_restore -l backup.dump | grep -v '_myslonycluster' > safe.toc

3) Now you can restore your two schemas using -L flag 


pg_restore -L safe.toc -d your_database backup.dump


David.



________________________________
 De?: Brian Fehrle <brianf at consistentstate.com>
??: "slony1-general at lists.slony.info" <slony1-general at lists.slony.info> 
Envoy? le : Jeudi 16 ao?t 2012 18h37
Objet?: [Slony1-general] pg_dump backups without slony triggers?
 
Hi All,

I have a Slony slave that I wish to perform some pg_dumps as backups 
from to restore elsewhere for testing. But I don't want the slony schema 
or triggers to come in the dump.

my dump right now is like follows:

pg_dump dbname --schema=myschema1 --schema=myschema2

Since I'm specifying specifically two schemas, the slony schema is not 
included. However, the slony triggers on the tables within the schemas I 
do want to copy are part of the dump. So when I run a restore, it 
attempts to create those triggers. The triggers do fail because the 
slony schema and elements don't exist, but I don't like the idea of 
having a ton of failures in my restoration when restoring this database.

Is there any way in the dump to also exclude slony objects that exist 
out of the slony schema?

Thanks,

- Brian F
_______________________________________________
Slony1-general mailing list
Slony1-general at lists.slony.info
http://lists.slony.info/mailman/listinfo/slony1-general
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.slony.info/pipermail/slony1-general/attachments/20120817/91c0e023/attachment.htm 

From cbbrowne at afilias.info  Fri Aug 17 17:12:49 2012
From: cbbrowne at afilias.info (Christopher Browne)
Date: Fri, 17 Aug 2012 20:12:49 -0400
Subject: [Slony1-general] pg_dump backups without slony triggers?
In-Reply-To: <502D21BF.8010603@consistentstate.com>
References: <502D21BF.8010603@consistentstate.com>
Message-ID: <CANfbgbbOrRLV5E3umnHOoaiOBsfcksgyBdz5HsdW4B7Lt9jKGw@mail.gmail.com>

Alas, there is not presently a way to easily exclude all the Slony bits
including triggers.

It is easy enough to exclude most Slony objects by using the -n option to
leave off the appropriate schema.  But the log triggers are tied to your
tables, harder to exclude.

You might integrate David's idea...

Pg_dump with -n to exclude Slony objects

Then grep to exclude (e.g. -v option) for logtrigger and denyaccess
triggers.

I'd hope that would be very close to loading cleanly.

There have been ideas about extending pg_dump to allow fairly fine grained
exclusion filters, akin to having sophisticated filters in 'find', but I
think that's gotten deferred to Postgres 9.3.  (Search pgsql-hackers for
pg_dump, options, and I think Andrew Dunstan has been in on discussions if
not initiator...)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.slony.info/pipermail/slony1-general/attachments/20120817/93b77d89/attachment.htm 

From cbbrowne at afilias.info  Fri Aug 17 17:19:46 2012
From: cbbrowne at afilias.info (Christopher Browne)
Date: Fri, 17 Aug 2012 20:19:46 -0400
Subject: [Slony1-general] pg_dump backups without slony triggers?
In-Reply-To: <CANfbgbbOrRLV5E3umnHOoaiOBsfcksgyBdz5HsdW4B7Lt9jKGw@mail.gmail.com>
References: <502D21BF.8010603@consistentstate.com>
	<CANfbgbbOrRLV5E3umnHOoaiOBsfcksgyBdz5HsdW4B7Lt9jKGw@mail.gmail.com>
Message-ID: <CANfbgbZudzc9Cn8z=6N5NM6jDWXRN4F-wghSWZDgrU51dCYz7Q@mail.gmail.com>

Hmm.  It strikes me that one could argue that it is a bug in pg_dump if I
ask to exclude schema "foo" (-n option) and then triggers referencing
functions in that schema are retained in the dump.

The argument is not immune to rebuff, but it seems worth trying.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.slony.info/pipermail/slony1-general/attachments/20120817/0701b119/attachment.htm 

From cs_dba at consistentstate.com  Tue Aug 21 14:41:26 2012
From: cs_dba at consistentstate.com (CS DBA)
Date: Tue, 21 Aug 2012 15:41:26 -0600
Subject: [Slony1-general] Monitoring big table sync
Message-ID: <75D98554-4465-4190-8722-69719639C6E5@consistentstate.com>

Hi all;

I have an initial sync in progress.  It's currently syncing a 32GB table. I'd like to be able to verify that some progress is happening.  Here's what I see:



log1 (the master slon log) has this:

NOTICE:  Slony-I: log switch to sl_log_2 still in progress - sl_log_1 not truncated
CONTEXT:  PL/pgSQL function "cleanupevent" line 99 at assignment
2012-08-21 14:40:26 MDTINFO   cleanupThread:    0.043 seconds for cleanupEvent()
NOTICE:  Slony-I: log switch to sl_log_2 still in progress - sl_log_1 not truncated
CONTEXT:  PL/pgSQL function "cleanupevent" line 99 at assignment
2012-08-21 14:51:48 MDTINFO   cleanupThread:    0.054 seconds for cleanupEvent()
2012-08-21 14:51:48 MDTINFO   cleanupThread:    0.006 seconds for vacuuming
NOTICE:  Slony-I: log switch to sl_log_2 still in progress - sl_log_1 not truncated
CONTEXT:  PL/pgSQL function "cleanupevent" line 99 at assignment
2012-08-21 15:03:06 MDTINFO   cleanupThread:    0.043 seconds for cleanupEvent()


log2 (the slave slon log) has this:
$ tail slon.node2.log
2012-08-21 04:24:05 MDTCONFIG remoteWorkerThread_1: 92441 bytes copied for table "sch1"."rtl_pkg"
2012-08-21 04:24:05 MDTCONFIG remoteWorkerThread_1: 0.377 seconds to copy table "sch1"."rtl_pkg"
2012-08-21 04:24:05 MDTCONFIG remoteWorkerThread_1: copy table "sch1"."std_contr"
2012-08-21 04:24:05 MDTCONFIG remoteWorkerThread_1: Begin COPY of table "sch1"."std_contr"
NOTICE:  truncate of "sch1"."std_contr" succeeded
2012-08-21 04:24:05 MDTCONFIG remoteWorkerThread_1: 35072 bytes copied for table "sch1"."std_contr"
2012-08-21 04:24:05 MDTCONFIG remoteWorkerThread_1: 0.345 seconds to copy table "sch1"."std_contr"
2012-08-21 04:24:05 MDTCONFIG remoteWorkerThread_1: copy table "sch2"."order_hist"
2012-08-21 04:24:05 MDTCONFIG remoteWorkerThread_1: Begin COPY of table "sch2"."order_hist"
NOTICE:  truncate of "sch2"."order_hist" succeeded


The system time is now :
Tue Aug 21 15:24:30 MDT 2012

So the sch2.order_hist table has been syncing for 11 hours.  The sch2.order_hist table is 32GB and I did expect it to take some time but I would like to be able to validate some progress.  A select * from pg_stat_activity on the master shows me that this sql is running:

 copy "sch1"."order_hist" ("id","order_hist_id","cust_name","order_id","order_type", "order_dt","sw_version") to stdout;


And, a select * from pg_stat_activity on the slave shows me that this sql is running:
select "_custdb_slony".prepareTableForCopy(186); copy "sch2"."order_hist" ("id","order_hist_id","cust_name","order_id","order_type", "order_dt","sw_version")  from stdin; 


Other than this I see no "verifiable" activity, plus the lag_events in sl_status on the master continue to grow, currently we're at 57,355 lag events.


Thoughts?


Thanks in advance



From cbbrowne at afilias.info  Tue Aug 21 15:16:29 2012
From: cbbrowne at afilias.info (Christopher Browne)
Date: Tue, 21 Aug 2012 18:16:29 -0400
Subject: [Slony1-general] Monitoring big table sync
In-Reply-To: <75D98554-4465-4190-8722-69719639C6E5@consistentstate.com>
References: <75D98554-4465-4190-8722-69719639C6E5@consistentstate.com>
Message-ID: <CANfbgbYKWmjBH5KO7sB-9AcaZW-eUrp4FMMxrunSGb6T8w_74Q@mail.gmail.com>

On Tue, Aug 21, 2012 at 5:41 PM, CS DBA <cs_dba at consistentstate.com> wrote:
> Hi all;
>
> I have an initial sync in progress.  It's currently syncing a 32GB table. I'd like to be able to verify that some progress is happening.  Here's what I see:
>
>
> log1 (the master slon log) has this:
>
> NOTICE:  Slony-I: log switch to sl_log_2 still in progress - sl_log_1 not truncated
> CONTEXT:  PL/pgSQL function "cleanupevent" line 99 at assignment
> 2012-08-21 14:40:26 MDTINFO   cleanupThread:    0.043 seconds for cleanupEvent()
> NOTICE:  Slony-I: log switch to sl_log_2 still in progress - sl_log_1 not truncated
> CONTEXT:  PL/pgSQL function "cleanupevent" line 99 at assignment
> 2012-08-21 14:51:48 MDTINFO   cleanupThread:    0.054 seconds for cleanupEvent()
> 2012-08-21 14:51:48 MDTINFO   cleanupThread:    0.006 seconds for vacuuming
> NOTICE:  Slony-I: log switch to sl_log_2 still in progress - sl_log_1 not truncated
> CONTEXT:  PL/pgSQL function "cleanupevent" line 99 at assignment
> 2012-08-21 15:03:06 MDTINFO   cleanupThread:    0.043 seconds for cleanupEvent()
>
>
> log2 (the slave slon log) has this:
> $ tail slon.node2.log
> 2012-08-21 04:24:05 MDTCONFIG remoteWorkerThread_1: 92441 bytes copied for table "sch1"."rtl_pkg"
> 2012-08-21 04:24:05 MDTCONFIG remoteWorkerThread_1: 0.377 seconds to copy table "sch1"."rtl_pkg"
> 2012-08-21 04:24:05 MDTCONFIG remoteWorkerThread_1: copy table "sch1"."std_contr"
> 2012-08-21 04:24:05 MDTCONFIG remoteWorkerThread_1: Begin COPY of table "sch1"."std_contr"
> NOTICE:  truncate of "sch1"."std_contr" succeeded
> 2012-08-21 04:24:05 MDTCONFIG remoteWorkerThread_1: 35072 bytes copied for table "sch1"."std_contr"
> 2012-08-21 04:24:05 MDTCONFIG remoteWorkerThread_1: 0.345 seconds to copy table "sch1"."std_contr"
> 2012-08-21 04:24:05 MDTCONFIG remoteWorkerThread_1: copy table "sch2"."order_hist"
> 2012-08-21 04:24:05 MDTCONFIG remoteWorkerThread_1: Begin COPY of table "sch2"."order_hist"
> NOTICE:  truncate of "sch2"."order_hist" succeeded
>
>
> The system time is now :
> Tue Aug 21 15:24:30 MDT 2012
>
> So the sch2.order_hist table has been syncing for 11 hours.  The sch2.order_hist table is 32GB and I did expect it to take some time but I would like to be able to validate some progress.  A select * from pg_stat_activity on the master shows me that this sql is running:
>
>  copy "sch1"."order_hist" ("id","order_hist_id","cust_name","order_id","order_type", "order_dt","sw_version") to stdout;
>
>
> And, a select * from pg_stat_activity on the slave shows me that this sql is running:
> select "_custdb_slony".prepareTableForCopy(186); copy "sch2"."order_hist" ("id","order_hist_id","cust_name","order_id","order_type", "order_dt","sw_version")  from stdin;
>
>
> Other than this I see no "verifiable" activity, plus the lag_events in sl_status on the master continue to grow, currently we're at 57,355 lag events.
>
>
> Thoughts?

That is exactly what I'd expect to see if things are working properly.

The one thing that I'd be a *bit* concerned about is the 57K event
lag.  At one point, I recall there being a possible troublesome case
where one of the queries for the first SYNC processing after that
could time out when trying to read in all of the tens of thousands of
events.  It would be nicer if, during this laggy period, SYNCs got
generated somewhat less often, let's say, every 10-20s rather than
every 0.5s.

There's not much benefit to having super-fine granularity if you are
catching up on 40 hours of backlog.  Fine granularity of SYNCs might
be of benefit in keeping replicas more up to date once subscribed, but
doesn't help one bit during the 40 hour backlog.

You could increase the parm "sync_interval" for the slon process
managing the origin node, perhaps changing it to 1000 or even 10000,
to have less frequent SYNCs generated on that node.  And you can do
this without interrupting the subscription; the slon process that is
copying data to the subscriber is the one managing the subscriber
node.  Bad mojo to kill *that* slon - that would restart the
subscription process!  :-(

But it should be fine to kill and restart the slon managing the origin
node with the new parameter value.  If you're most of the way through,
there's little point.

Thinking aloud, I wonder if we might want to have this parameter be
more "adaptive", so that we'd lengthen sync_interval automatically if
all subscriptions are way behind.  But that's not of any use to you,
today.

There's one more thing you could do on the replica, which is to run
"vacuum verbose" against the 32GB table.  The output of that should
give you an idea as to how far thru the process it is.

Mind you, it kicks off a re-index of all indexes on the table after
the COPY, so it could be that the data's all in place, and it's busy
indexing.  Note that this re-index is a performance WIN; we shut off
indexes and reindex at the end because mass-reindexing is quite a bit
faster than loading data into the table with indexes turned on.

From JanWieck at Yahoo.com  Wed Aug 22 08:34:26 2012
From: JanWieck at Yahoo.com (Jan Wieck)
Date: Wed, 22 Aug 2012 11:34:26 -0400
Subject: [Slony1-general] Monitoring big table sync
In-Reply-To: <CANfbgbYKWmjBH5KO7sB-9AcaZW-eUrp4FMMxrunSGb6T8w_74Q@mail.gmail.com>
References: <75D98554-4465-4190-8722-69719639C6E5@consistentstate.com>
	<CANfbgbYKWmjBH5KO7sB-9AcaZW-eUrp4FMMxrunSGb6T8w_74Q@mail.gmail.com>
Message-ID: <5034FC02.3060503@Yahoo.com>

On 8/21/2012 6:16 PM, Christopher Browne wrote:
> The one thing that I'd be a *bit* concerned about is the 57K event
> lag.  At one point, I recall there being a possible troublesome case
> where one of the queries for the first SYNC processing after that
> could time out when trying to read in all of the tens of thousands of
> events.  It would be nicer if, during this laggy period, SYNCs got
> generated somewhat less often, let's say, every 10-20s rather than
> every 0.5s.

That can only happen on slon startup, when the remote_listen thread 
selects all NEW events. During the copy_set(), the remote listener is 
still getting these events and queues them in memory.

Unless something is interrupting the copy, I'm not worried yet.


Jan

-- 
Anyone who trades liberty for security deserves neither
liberty nor security. -- Benjamin Franklin

From cbbrowne at afilias.info  Wed Aug 22 08:45:51 2012
From: cbbrowne at afilias.info (Christopher Browne)
Date: Wed, 22 Aug 2012 11:45:51 -0400
Subject: [Slony1-general] Monitoring big table sync
In-Reply-To: <5034FC02.3060503@Yahoo.com>
References: <75D98554-4465-4190-8722-69719639C6E5@consistentstate.com>
	<CANfbgbYKWmjBH5KO7sB-9AcaZW-eUrp4FMMxrunSGb6T8w_74Q@mail.gmail.com>
	<5034FC02.3060503@Yahoo.com>
Message-ID: <CANfbgbaUG4XKBqjxYcqKf=n-7dNffjvZ5y=7bCXjUbqkZnkDiw@mail.gmail.com>

On Wed, Aug 22, 2012 at 11:34 AM, Jan Wieck <JanWieck at yahoo.com> wrote:
> On 8/21/2012 6:16 PM, Christopher Browne wrote:
>>
>> The one thing that I'd be a *bit* concerned about is the 57K event
>> lag.  At one point, I recall there being a possible troublesome case
>> where one of the queries for the first SYNC processing after that
>> could time out when trying to read in all of the tens of thousands of
>> events.  It would be nicer if, during this laggy period, SYNCs got
>> generated somewhat less often, let's say, every 10-20s rather than
>> every 0.5s.
>
>
> That can only happen on slon startup, when the remote_listen thread selects
> all NEW events. During the copy_set(), the remote listener is still getting
> these events and queues them in memory.
>
> Unless something is interrupting the copy, I'm not worried yet.

Agreed.

I do recall seeing trouble come up *afterwards*, if there were so many
events to process that it took too long to run the query to draw them
in.

Ah, poking at the code is useful.  There is a configuration option for
this, remote_listen_timeout, which defaults to 300 seconds, but might
be set higher.

If, after the subscription completes, there are wildly too many SYNC
events lingering around, and it takes too long to process them, the
remote_listen thread will time out, complaining thus:

remoteListenThread_%d: timeout (%d s) for event selection\n"

(Fill in values as needed :-).)

The initial COPY has completed, but the slon could get stuck at that
point, timing out repeatedly.  If so, then setting the config option
remote_listen_timeout to something larger than 300 will allow it to
get past that problem.

And it is by no means certain that there WILL be a failure there; it's
just that it's *possible*, and that's a reasonable resolution.
-- 
"Bother,"  said Pooh,  "Eeyore, ready  two photon  torpedoes  and lock
phasers on the Heffalump, Piglet, meet me in transporter room three"

From JanWieck at Yahoo.com  Wed Aug 22 09:45:17 2012
From: JanWieck at Yahoo.com (Jan Wieck)
Date: Wed, 22 Aug 2012 12:45:17 -0400
Subject: [Slony1-general] Monitoring big table sync
In-Reply-To: <CANfbgbaUG4XKBqjxYcqKf=n-7dNffjvZ5y=7bCXjUbqkZnkDiw@mail.gmail.com>
References: <75D98554-4465-4190-8722-69719639C6E5@consistentstate.com>
	<CANfbgbYKWmjBH5KO7sB-9AcaZW-eUrp4FMMxrunSGb6T8w_74Q@mail.gmail.com>
	<5034FC02.3060503@Yahoo.com>
	<CANfbgbaUG4XKBqjxYcqKf=n-7dNffjvZ5y=7bCXjUbqkZnkDiw@mail.gmail.com>
Message-ID: <50350C9D.8000305@Yahoo.com>

On 8/22/2012 11:45 AM, Christopher Browne wrote:
> On Wed, Aug 22, 2012 at 11:34 AM, Jan Wieck <JanWieck at yahoo.com> wrote:
>> On 8/21/2012 6:16 PM, Christopher Browne wrote:
>>>
>>> The one thing that I'd be a *bit* concerned about is the 57K event
>>> lag.  At one point, I recall there being a possible troublesome case
>>> where one of the queries for the first SYNC processing after that
>>> could time out when trying to read in all of the tens of thousands of
>>> events.  It would be nicer if, during this laggy period, SYNCs got
>>> generated somewhat less often, let's say, every 10-20s rather than
>>> every 0.5s.
>>
>>
>> That can only happen on slon startup, when the remote_listen thread selects
>> all NEW events. During the copy_set(), the remote listener is still getting
>> these events and queues them in memory.
>>
>> Unless something is interrupting the copy, I'm not worried yet.
>
> Agreed.
>
> I do recall seeing trouble come up *afterwards*, if there were so many
> events to process that it took too long to run the query to draw them
> in.
>
> Ah, poking at the code is useful.  There is a configuration option for
> this, remote_listen_timeout, which defaults to 300 seconds, but might
> be set higher.
>
> If, after the subscription completes, there are wildly too many SYNC
> events lingering around, and it takes too long to process them, the
> remote_listen thread will time out, complaining thus:

You are missing the point. However many unprocessed SYNC events there 
will be after the copy, the remote_listener will have shoveled them into 
memory as they appeared already. There is no BIG EVENT SELECT after the 
copy.



-- 
Anyone who trades liberty for security deserves neither
liberty nor security. -- Benjamin Franklin

From ssinger at ca.afilias.info  Mon Aug 27 12:42:42 2012
From: ssinger at ca.afilias.info (Steve Singer)
Date: Mon, 27 Aug 2012 15:42:42 -0400
Subject: [Slony1-general] Slony 2.1.2 released
Message-ID: <503BCDB2.4040107@ca.afilias.info>

The Slony team is pleased to announce the next minor release of the 
Slony replication system for PostgreSQL.

Slony 2.1.2 is a bug fix release on the 2.1 stream.

This release includes fixes for the following bugs:

- Bug #275 :: Fixed memory leak in monitor thread
- Bug #272 :: Fix memory overwrite in slonik parsing
- Bug #268 :: PostgreSQL 9.2 has changed pg_stat_activity.procpid to pid
- Bug #263 :: CPPFLAGS and LDFLAGS get passed from configure
- Bug #274 :: Include schemadoc.xml as part of the distribution tar(again)
- Bug #264 :: Add an ORDER BY to the log selection query so the xid's 
get compressed
- Bug #258 :: The cleanup thread should no longer block waiting on a lock

Slony 2.1.2 can be downloaded from the following location

http://main.slony.info/downloads/2.1/source/slony1-2.1.2.tar.bz2
http://main.slony.info/downloads/2.1/source/slony1-2.1.2-docs.tar.bz2




From noreply+4007862432 at badoo.com  Mon Aug 27 14:18:02 2012
From: noreply+4007862432 at badoo.com (Badoo)
Date: Mon, 27 Aug 2012 21:18:02 +0000
Subject: [Slony1-general] Sunny left a message for you
Message-ID: <20120827211739.033FA291184@main.slony.info>

Sunny left a message for you

Only you can see the sender and content of your message, and you can delete it anytime. You can instantly reply using our message exchange system:
http://eu1.badoo.com/0289869293/in/MeStn3n0Vbg/?lang_id=3&m=63&mid=503be3d90000000000030000004c50d9027f65da00ea

Some other people in the area who are on Badoo
Snoreling (Dundee, United Kingdom)
Nicola (Dundee, United Kingdom)
Kelly (Dundee, United Kingdom)

http://eu1.badoo.com/0289869293/in/MeStn3n0Vbg/?lang_id=3&m=63&mid=503be3d90000000000030000004c50d9027f65da00ea

If the link in this message does not work, try copying and pasting it into your browser.

This email is part of our delivery procedure for the message sent by Sunny. If you have received this email by mistake, please ignore it. The message will be deleted soon.

Have fun!
The Badoo Team

You have received this email from Badoo Trading Limited (postal address below).
http://eu1.badoo.com/impersonation.phtml?lang_id=3&email=slony1-general%40lists.slony.info&block_code=aa5bf5&m=63&mid=503be3d90000000000030000004c50d9027f65da00ea
Badoo Trading Limited is a limited company registered in England and Wales
under CRN 7540255 with its registered office at 12 Red Lion Square, London, WC1R 4QD.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.slony.info/pipermail/slony1-general/attachments/20120827/c0d6c01b/attachment.htm 

From smccloud at geo-comm.com  Mon Aug 27 14:33:25 2012
From: smccloud at geo-comm.com (Shaun McCloud)
Date: Mon, 27 Aug 2012 21:33:25 +0000
Subject: [Slony1-general] Slony 2.1.2 released
In-Reply-To: <503BCDB2.4040107@ca.afilias.info>
References: <503BCDB2.4040107@ca.afilias.info>
Message-ID: <7742DD496427B743BC8B7BBF6D380BA03C1089E7@EXCHANGE10.geo-comm.local>

I have found one issue compiling this on a Windows system with PostgreSQL 9.0.9 x64 & PostGIS 2.0 x64, it complains about not being able to find intl.lib.  Copying this from C:\PostgreSQL\9.0\bin\postgisgui to C:\PostgreSQL\9.0\lib fixed the issue for me.  Any clue why its looking for intl.lib?

Shaun McCloud, MCDST | Associate Software Developer
Geo-Comm Inc. | www.geo-comm.com


-----Original Message-----
From: slony1-general-bounces at lists.slony.info [mailto:slony1-general-bounces at lists.slony.info] On Behalf Of Steve Singer
Sent: Monday, August 27, 2012 14:43
To: slony general
Subject: [Slony1-general] Slony 2.1.2 released

The Slony team is pleased to announce the next minor release of the Slony replication system for PostgreSQL.

Slony 2.1.2 is a bug fix release on the 2.1 stream.

This release includes fixes for the following bugs:

- Bug #275 :: Fixed memory leak in monitor thread
- Bug #272 :: Fix memory overwrite in slonik parsing
- Bug #268 :: PostgreSQL 9.2 has changed pg_stat_activity.procpid to pid
- Bug #263 :: CPPFLAGS and LDFLAGS get passed from configure
- Bug #274 :: Include schemadoc.xml as part of the distribution tar(again)
- Bug #264 :: Add an ORDER BY to the log selection query so the xid's get compressed
- Bug #258 :: The cleanup thread should no longer block waiting on a lock

Slony 2.1.2 can be downloaded from the following location

http://main.slony.info/downloads/2.1/source/slony1-2.1.2.tar.bz2
http://main.slony.info/downloads/2.1/source/slony1-2.1.2-docs.tar.bz2



_______________________________________________
Slony1-general mailing list
Slony1-general at lists.slony.info
http://lists.slony.info/mailman/listinfo/slony1-general

