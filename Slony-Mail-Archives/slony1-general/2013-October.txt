From mjames at profitpoint.com  Tue Oct  1 12:47:42 2013
From: mjames at profitpoint.com (Mike James)
Date: Tue, 1 Oct 2013 19:47:42 +0000
Subject: [Slony1-general] help with error
Message-ID: <CE709F1F.6609%mjames@profitpoint.com>

I just noticed this error in the pg log files. This particular old instance is running postgresql 8.3.9 and slony1 2.0.3 rc2. Any ideas where this error originates. Google wasn't helpful in this case. Can I ignore it?

function _snapcluster.shouldslonyvacuumtable(name, name) does not exist at character 9

Mike
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.slony.info/pipermail/slony1-general/attachments/20131001/6ea44f54/attachment.htm 

From steve at ssinger.info  Tue Oct  1 12:58:03 2013
From: steve at ssinger.info (Steve Singer)
Date: Tue, 1 Oct 2013 15:58:03 -0400
Subject: [Slony1-general] help with error
In-Reply-To: <CE709F1F.6609%mjames@profitpoint.com>
References: <CE709F1F.6609%mjames@profitpoint.com>
Message-ID: <BLU0-SMTP48FDB838FF64D849906EEFDC150@phx.gbl>

On 10/01/2013 03:47 PM, Mike James wrote:
> I just noticed this error in the pg log files. This particular old
> instance is running postgresql 8.3.9 and slony1 2.0.3 rc2. Any ideas
> where this error originates. Google wasn't helpful in this case. Can I
> ignore it?
>
> function _snapcluster.shouldslonyvacuumtable(name, name) does not exist
> at character 9
>

This bug was fixed between 2.0.3 RC2 and the actual 2.0.3 
(e31daffec5968470072a1dd435e11d49e620111c I think)

Note that 2.0.3 ended up being a bad release, if your upgrading you 
should at *least* upgrade to 2.0.4


> Mike
>
>
> _______________________________________________
> Slony1-general mailing list
> Slony1-general at lists.slony.info
> http://lists.slony.info/mailman/listinfo/slony1-general
>


From mjames at profitpoint.com  Tue Oct  1 13:06:01 2013
From: mjames at profitpoint.com (Mike James)
Date: Tue, 1 Oct 2013 20:06:01 +0000
Subject: [Slony1-general] help with error
In-Reply-To: <BLU0-SMTP48FDB838FF64D849906EEFDC150@phx.gbl>
Message-ID: <CE70A2E8.6616%mjames@profitpoint.com>

Hmm, ok. We are migrating, however slowly, to postgresql 9.2 and the
corresponding slony1 package in the pgdg apt-get repo. I inherited this
dinosaur :)

Thanks for the quick response.

Mike 

On 10/1/13 3:58 PM, "Steve Singer" <steve at ssinger.info> wrote:

>On 10/01/2013 03:47 PM, Mike James wrote:
>> I just noticed this error in the pg log files. This particular old
>> instance is running postgresql 8.3.9 and slony1 2.0.3 rc2. Any ideas
>> where this error originates. Google wasn't helpful in this case. Can I
>> ignore it?
>>
>> function _snapcluster.shouldslonyvacuumtable(name, name) does not exist
>> at character 9
>>
>
>This bug was fixed between 2.0.3 RC2 and the actual 2.0.3
>(e31daffec5968470072a1dd435e11d49e620111c I think)
>
>Note that 2.0.3 ended up being a bad release, if your upgrading you
>should at *least* upgrade to 2.0.4
>
>
>> Mike
>>
>>
>> _______________________________________________
>> Slony1-general mailing list
>> Slony1-general at lists.slony.info
>> http://lists.slony.info/mailman/listinfo/slony1-general
>>
>


From cbbrowne at afilias.info  Thu Oct  3 08:38:44 2013
From: cbbrowne at afilias.info (Christopher Browne)
Date: Thu, 3 Oct 2013 11:38:44 -0400
Subject: [Slony1-general] MAXSTATEMENTS in src/parsestatements
Message-ID: <CANfbgbbNpGzNfa8rNuk3SR8NEsotH01wrYBG6LtChto36VY=Sw@mail.gmail.com>

An issue recently came up where someone was preparing a mighty large
EXECUTE SCRIPT request, and bumped up against the limit that the statement
parser statically determines that a script can have, at maximum,
MAXSTATEMENTS statements, and sets the value of that to 1000.

I'm responsible for having set that value; would like to debate it a little
bit.

The relevant data structure is that
   int STMTS[MAXSTATEMENTS]
is used to indicate where the end of each statement is within the script
being processed by EXECUTE SCRIPT.

I took the naive approach of declaring STMTS[] statically.  Seeing as how
we have had exactly one complaint about the matter since 2006, I rather
think that this was an appropriate choice.

It would be some effort to switch to allocate dynamically; I wonder if it
is apropos to:

a) Leave things alone, as there have been very few complaints over the last
7 years.

b) Increase the value from 1000 to something moderately larger, as people
likely tend to have more RAM these days.

c) Go to the effort of dynamic allocation, so that arbitrarily large
scripts are supportable.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.slony.info/pipermail/slony1-general/attachments/20131003/b46cfe1c/attachment.htm 

