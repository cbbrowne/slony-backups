From ssinger at ca.afilias.info  Wed Mar  5 07:23:02 2014
From: ssinger at ca.afilias.info (Steve Singer)
Date: Wed, 05 Mar 2014 10:23:02 -0500
Subject: [Slony1-general] Error with add table
In-Reply-To: <!&!AAAAAAAAAAAYAAAAAAAAAFLxZtQqo65Oo+1jhlUB9DvCgAAAEAAAANW/8fKjKUJFjot0mTZcjbIBAAAAAA==@it-helps.co.uk>
References: <!&!AAAAAAAAAAAYAAAAAAAAAFLxZtQqo65Oo+1jhlUB9DvCgAAAEAAAANW/8fKjKUJFjot0mTZcjbIBAAAAAA==@it-helps.co.uk>
Message-ID: <53174156.4020807@ca.afilias.info>

On 02/24/2014 11:18 AM, Martin Moore wrote:
> Hi,
>
> I've restored a postgres 8.4 database onto a 9.3 installation (on Debian
> Jessie) with Slony 2.1.4.
>

Does your schema have any custom operators ?

When you say that you restored an 8.4 DB did you do this with pg_dump? 
pg_upgrade? or some other method?



> Master and slave servers are running the same versions of everything.
>
> Running a script (as used in 8.4 - slony ver 1.2.21 so may need to be
> changed, but can't find anything) which contains the following
>
> define CLUSTER T1;
> define PRIMARY 1;
> define SLAVE 10;
> cluster name = @CLUSTER;
> define origin1 origin = @PRIMARY;
> define origin2 origin = @SLAVE;
> define primary id = @PRIMARY;
> define slave id = @SLAVE;
> define set_user_admin            id = 10001;
>
> node @PRIMARY   admin conninfo = 'dbname=myname host=localhost user=slony';
>
> node @SLAVE admin conninfo = 'dbname=myname host=slave.host.com user=slony';
> create set    (id = 10001, @origin1, comment = 'user_admin');
> set add table (set @set_user_admin, @origin1, id = 10002, full qualified
> name = 'public.users', comment = 'Table public.users');
>
>
> fails as below.
>
> ./addsst.slonik:3: WARNING:  Auto-casting int to text: 10001
> CONTEXT:  PL/pgSQL function "_T1".storeset(integer,text) line 11 at RETURN
> ./addsst.slonik:3: WARNING:  Auto-casting int to text: 1
> CONTEXT:  PL/pgSQL function "_T1".storeset(integer,text) line 11 at RETURN
> ./addsst.slonik:4: WARNING:  Auto-casting int to text: 10002
> CONTEXT:  PL/pgSQL function "_T1".altertableaddtriggers(integer) line 53 at
> EXECUTE statement SQL statement "SELECT
> "_T1".alterTableAddTriggers(p_tab_id)"
> PL/pgSQL function "_T1".setaddtable_int(integer,integer,text,name,text) line
> 99 at PERFORM SQL statement "SELECT "_T1".setAddTable_int(p_set_id,
> p_tab_id, p_fqname,
>                          p_tab_idxname, p_tab_comment)"
> PL/pgSQL function "_T1".setaddtable(integer,integer,text,name,text) line 28
> at PERFORM
> ./addsst.slonik:4: PGRES_FATAL_ERROR lock table "_T1".sl_config_lock;select
> "_T1".setAddTable(10001, 10002, 'public.users', 'users_pkey', 'Table
> public.users');  - ERROR:  operator is not unique: text || integer
> LINE 3:     '"_T1".log_truncate(' || i_tabid || ');'
>                                    ^
> HINT:  Could not choose a best candidate operator. You might need to add
> explicit type casts.
> QUERY:  SELECT 'create trigger "_T1_truncatetrigger" ' ||
>                                  ' before truncate on ' || i_fqtable || ' for
> each statement execute procedure ' ||
>                                  '"_T1".log_truncate(' || i_tabid || ');'
> CONTEXT:  PL/pgSQL function "_T1".altertableaddtruncatetrigger(text,integer)
> line 3 at EXECUTE statement SQL statement "SELECT
> "_T1".alterTableAddTruncateTrigger(v_tab_fqname, p_tab_id)"
> PL/pgSQL function "_T1".altertableaddtriggers(integer) line 65 at PERFORM
> SQL statement "SELECT "_T1".alterTableAddTriggers(p_tab_id)"
> PL/pgSQL function "_T1".setaddtable_int(integer,integer,text,name,text) line
> 99 at PERFORM SQL statement "SELECT "_T1".setAddTable_int(p_set_id,
> p_tab_id, p_fqname,
>                          p_tab_idxname, p_tab_comment)"
> PL/pgSQL function "_T1".setaddtable(integer,integer,text,name,text) line 28
> at PERFORM
>
>
>
>
> Any ideas?
>
>
> Thanks,
>
> Martin
>
> _______________________________________________
> Slony1-general mailing list
> Slony1-general at lists.slony.info
> http://lists.slony.info/mailman/listinfo/slony1-general
>


From vivek at khera.org  Thu Mar 13 11:43:41 2014
From: vivek at khera.org (Vick Khera)
Date: Thu, 13 Mar 2014 14:43:41 -0400
Subject: [Slony1-general] question about upgrading 2.1 to 2.2 steps from
	manual
Message-ID: <CALd+dce=d13Sfs=ggNMr0XHD1Obpmwr0UOBWkf5gJ-e13w74yA@mail.gmail.com>

In the docs, a suggested method to upgrade 2.1 to to 2.2 is as follows:


   1. Use SLONIK LOCK SET to lock all sets, so that no new changes are
   being injected into the log tables
   2. Set slon parameter slon_config_cleanup_interval to a very low value
   (a few seconds) so that the slon cleanup thread will trim data out of
   sl_log_1 and sl_log_2 immediately
   3. Restart slon for each node and let it run through a cleanup cycle to
   empty out sl_log_1 and sl_log_2 on all nodes.
   4. Verify that sl_log_1 and sl_log_2 are empty on all nodes in the
   cluster.
   5. Use SLONIK UPDATE FUNCTIONS against each node to upgrade to version
   2.2
   6. Use SLONIK UNLOCK SET to unlock all sets

Based on my experience and other reading, I think between steps 4 and 5
should be:


   1. stop slon
   2. install new version of slony

then after step 5, restart slon.

Is that the correct place to perform the install? Or can/should that be
done between steps 2 and 3?

Also, will the lock set survive restarting slon? I thought it took out an
exclusive lock on all tables, but if you stop the process, the locks would
then go away.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.slony.info/pipermail/slony1-general/attachments/20140313/ca559a5f/attachment.htm 

From glynastill at yahoo.co.uk  Fri Mar 14 02:48:57 2014
From: glynastill at yahoo.co.uk (Glyn Astill)
Date: Fri, 14 Mar 2014 09:48:57 +0000 (GMT)
Subject: [Slony1-general] question about upgrading 2.1 to 2.2 steps
	from	manual
In-Reply-To: <CALd+dce=d13Sfs=ggNMr0XHD1Obpmwr0UOBWkf5gJ-e13w74yA@mail.gmail.com>
References: <CALd+dce=d13Sfs=ggNMr0XHD1Obpmwr0UOBWkf5gJ-e13w74yA@mail.gmail.com>
Message-ID: <1394790537.14882.YahooMailNeo@web133205.mail.ir2.yahoo.com>

> From: Vick Khera <vivek at khera.org>

>To: slony <slony1-general at lists.slony.info> 
>Sent: Thursday, 13 March 2014, 18:43
>Subject: [Slony1-general] question about upgrading 2.1 to 2.2 steps from????manual
> 
>
>
>In the docs, a suggested method to upgrade 2.1 to to 2.2 is as follows:
>
>
>????1. Use SLONIK LOCK SET to lock all sets, so that no new changes are being injected into the log tables
>
>????2. Set slon parameter slon_config_cleanup_interval to a very low value (a few seconds) so that the slon cleanup thread will trim data out of sl_log_1 and sl_log_2 immediately
>
>????3. Restart slon for each node and let it run through a cleanup cycle to empty out sl_log_1 and sl_log_2 on all nodes.
>
>????4. Verify that sl_log_1 and sl_log_2 are empty on all nodes in the cluster.
>
>????5. Use SLONIK UPDATE FUNCTIONS against each node to upgrade to version 2.2
>
>????6. Use SLONIK UNLOCK SET to unlock all sets
>
>Based on my experience and other reading, I think between steps 4 and 5 should be:
>
>
>????1. stop slon
>
>????2. install new version of slony
>
>then after step 5, restart slon.
>
>
>Is that the correct place to perform the install? Or can/should that be done between steps 2 and 3?
>
>
>Also, will the lock set survive restarting slon? I thought it took out an exclusive lock on all tables, but if you stop the process, the locks would then go away.


Nice timing Vick; I was just thinking about the upgrade steps myself yesterday.

I think that although the lock set takes out exclusive locks on the individual tables, the actual locking mechanism is by adding a "lockedset" trigger to all the tables - so it should survive the slon restart.

However my concern is that I have many replication sets, and as I recall it's not possible to lock more than one set at a time - or has this changed as of 2.2?

There's definitely a need for some clarification on those upgrade steps.

